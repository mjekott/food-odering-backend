var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/controllers/AppController.html",[0,1.317,1,1.53]],["body/controllers/AppController.html",[0,1.795,1,2.086,2,1.338,3,0.748,4,0.64,5,0.64,6,2.189,7,0.64,8,2.086,9,3.542,10,1.555,11,0.054,12,1.158,13,2.74,14,1.555,15,2.086,16,1.004,17,0.868,18,1.753,19,2.189,20,0.748,21,0.369,22,2.189,23,1.826,24,1.555,25,2.74,26,0.039,27,0.039]],["title/modules/AppModule.html",[28,1.139,29,1.53]],["body/modules/AppModule.html",[1,2.057,2,1.507,3,0.582,4,0.498,5,0.498,11,0.054,16,1.201,17,0.675,18,1.858,19,1.703,20,0.582,21,0.287,26,0.032,27,0.032,28,1.304,29,2.635,30,0.901,31,1.507,32,1.703,33,1.703,34,1.703,35,2.147,36,2.056,37,1.42,38,1.42,39,2.132,40,2.465,41,2.056,42,1.703,43,1.42,44,2.132,45,2.465,46,2.132,47,2.132,48,2.132,49,2.132,50,2.132,51,2.132,52,2.132,53,2.132]],["title/injectables/AppService.html",[18,1.139,54,1.317]],["body/injectables/AppService.html",[3,0.81,4,0.693,5,0.693,7,0.693,8,2.199,9,3.656,11,0.053,12,1.254,14,1.684,15,2.199,16,0.81,17,0.94,18,1.638,20,0.81,21,0.399,24,1.684,26,0.041,27,0.041,54,1.893,55,1.977,56,2.371,57,2.968,58,2.968,59,2.968]],["title/controllers/CategeoryController.html",[0,1.317,60,1.53]],["body/controllers/CategeoryController.html",[0,0.883,2,0.883,3,0.494,4,0.422,5,0.422,7,0.422,8,1.55,10,1.868,11,0.054,12,1.391,14,1.868,16,0.899,17,0.573,20,0.494,21,0.243,22,1.444,23,1.205,24,1.868,26,0.029,27,0.029,60,1.55,61,1.444,62,1.808,63,1.444,64,3.021,65,2.182,66,2.931,67,2.182,68,1.444,69,1.792,70,3.293,71,1.808,72,2.182,73,1.334,74,1.154,75,2.182,76,2.182,77,3.293,78,1.808,79,1.444,80,2.63,81,2.732,82,1.808,83,2.182,84,1.391,85,1.444,86,1.808,87,1.444,88,2.732,89,1.444,90,1.808,91,1.808,92,1.808,93,1.808,94,1.808,95,1.808]],["title/classes/Category.html",[21,0.363,96,1.317]],["body/classes/Category.html",[3,0.699,4,0.598,5,0.598,7,0.598,10,1.453,11,0.054,12,1.082,15,1.993,16,0.959,20,1.094,21,0.345,26,0.037,27,0.037,73,1.957,74,1.484,96,1.957,97,1.707,98,1.453,99,1.993,100,2.562,101,3.513,102,2.562,103,3.513,104,2.806,105,2.562,106,1.251,107,3.513,108,1.707,109,1.707,110,2.562,111,2.046,112,1.453,113,2.046]],["title/injectables/CategoryService.html",[54,1.317,84,1.139]],["body/injectables/CategoryService.html",[3,0.32,4,0.274,5,0.274,7,0.274,8,1.099,11,0.055,12,1.216,14,1.947,16,0.87,17,0.371,20,0.32,21,0.158,23,0.781,24,1.099,26,0.02,27,0.02,54,0.946,55,0.781,63,1.979,64,2.624,65,1.548,66,2.299,67,1.548,68,1.548,69,1.556,72,1.979,73,1.774,74,1.047,75,1.979,76,1.548,79,1.548,80,1.979,83,1.979,84,0.819,87,1.548,89,0.937,96,2.208,106,0.572,108,0.781,109,0.781,111,2.546,114,0.937,115,1.938,116,1.172,117,2.878,118,1.172,119,1.938,120,1.172,121,2.742,122,1.172,123,3.632,124,1.938,125,1.172,126,1.917,127,1.938,128,2.878,129,2.477,130,2.477,131,1.172,132,0.937,133,1.172,134,1.172,135,1.172,136,1.938,137,2.878,138,1.172,139,1.938,140,1.172,141,1.938,142,1.172,143,1.172,144,1.172,145,1.172,146,1.172,147,1.172]],["title/classes/CreateCategoryDto.html",[21,0.363,69,1.317]],["body/classes/CreateCategoryDto.html",[3,0.81,4,0.693,5,0.693,7,0.693,10,1.684,11,0.053,12,1.254,15,2.199,16,0.81,20,0.81,21,0.522,26,0.041,27,0.041,69,1.893,73,2.108,74,1.254,97,1.977,99,2.199,148,2.371,149,2.968,150,2.968,151,3.876,152,2.968,153,2.371,154,2.968]],["title/modules/DatabaseModule.html",[28,1.139,35,1.317]],["body/modules/DatabaseModule.html",[3,0.728,4,0.623,5,0.623,11,0.055,16,1.197,17,0.845,20,0.728,21,0.359,26,0.038,27,0.038,28,1.525,30,1.126,35,1.762,41,2.405,42,2.883,43,2.405,64,1.776,106,1.302,155,2.666,156,4.385,157,2.13,158,2.666,159,2.666,160,2.666,161,2.666,162,2.666]],["title/modules/DishModules.html",[28,1.139,163,1.53]],["body/modules/DishModules.html",[2,1.594,3,0.63,4,0.539,5,0.539,11,0.055,16,1.187,17,0.731,20,0.63,21,0.31,26,0.034,27,0.034,28,1.379,30,0.974,31,1.594,36,2.175,37,1.537,38,1.537,40,2.608,41,1.537,60,2.15,73,1.126,84,1.908,85,1.843,96,1.126,104,1.843,106,1.126,112,1.852,132,1.843,157,1.843,163,2.562,164,1.843,165,1.843,166,2.307,167,2.307,168,2.307,169,2.307]],["title/coverage.html",[170,2.423]],["body/coverage.html",[0,1.708,1,1.444,5,0.595,6,2.033,11,0.052,18,1.075,21,0.471,26,0.037,27,0.037,54,1.708,56,2.033,60,1.444,61,2.033,69,1.243,74,1.075,84,1.075,96,1.243,98,1.984,112,1.444,114,2.033,121,2.033,148,2.033,170,1.696,171,2.545,172,2.545,173,2.545,174,4.772,175,4.301,176,2.545,177,2.545,178,3.497,179,2.545,180,2.545,181,2.033,182,2.545,183,2.033,184,2.545,185,2.545]],["title/dependencies.html",[31,1.578,186,1.816]],["body/dependencies.html",[11,0.055,17,0.85,21,0.488,26,0.038,27,0.038,31,1.311,43,1.789,45,2.144,106,1.311,108,1.789,153,2.144,187,4.106,188,2.684,189,2.684,190,2.684,191,2.684,192,3.626,193,2.684,194,2.684,195,2.684,196,2.684,197,2.684,198,2.684,199,2.684,200,2.684,201,2.684,202,2.684,203,2.684,204,2.684,205,2.684,206,2.684,207,2.684,208,2.684,209,2.684]],["title/miscellaneous/functions.html",[210,0.96,211,2.581]],["body/miscellaneous/functions.html",[7,0.871,11,0.047,26,0.047,27,0.047,181,2.977,183,3.826,210,1.574,211,2.977,212,3.727]],["title/index.html",[7,0.531,213,2.273,214,2.273]],["body/index.html",[4,0.485,11,0.053,26,0.032,27,0.032,126,1.383,170,1.383,215,2.075,216,2.075,217,3.026,218,2.075,219,2.075,220,2.075,221,2.075,222,2.075,223,2.075,224,3.572,225,2.075,226,2.075,227,2.075,228,2.075,229,4.499,230,2.075,231,2.075,232,2.075,233,4.357,234,2.075,235,2.075,236,3.026,237,2.075,238,2.075,239,2.075,240,2.075,241,3.026,242,3.026,243,2.075,244,2.075,245,2.075,246,3.026,247,3.026,248,2.075,249,2.075,250,2.075,251,2.075,252,2.075,253,1.658,254,2.075,255,2.075,256,2.075,257,2.075,258,2.075,259,2.075,260,2.075,261,2.075,262,2.075,263,2.075,264,1.658,265,2.075,266,2.075,267,2.075,268,2.075,269,2.075,270,2.075,271,1.658]],["title/modules.html",[30,1.537]],["body/modules.html",[11,0.045,26,0.045,27,0.045,29,1.983,30,1.477,35,1.707,163,1.983,253,3.435,272,4.3,273,4.3,274,4.657,275,3.495,276,3.495]],["title/overview.html",[277,2.905]],["body/overview.html",[2,1.376,11,0.049,18,1.778,26,0.039,27,0.039,29,2.723,30,1.191,31,1.829,32,2.252,33,2.252,34,2.252,35,2.055,36,2.497,37,1.878,38,1.878,55,1.878,84,1.778,97,1.878,163,2.544,164,2.252,165,2.252,277,2.252,278,2.819,279,4.209]],["title/properties.html",[99,1.833,186,1.816]],["body/properties.html",[11,0.054,26,0.046,27,0.046,99,2.056,126,2.415,264,2.895,271,2.895,280,3.624,281,3.624,282,3.624]],["title/miscellaneous/typealiases.html",[210,0.96,283,3.231]],["body/miscellaneous/typealiases.html",[7,0.871,11,0.047,26,0.047,27,0.047,74,1.574,98,2.114,109,2.979,210,1.574,284,3.727,285,2.977]],["title/miscellaneous/variables.html",[210,0.96,286,2.581]],["body/miscellaneous/variables.html",[7,0.846,11,0.05,26,0.046,27,0.046,98,2.056,112,2.494,113,2.895,210,1.531,285,2.895,286,2.895,287,3.624,288,3.624]]],"invertedIndex":[["",{"_index":11,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CategeoryController.html":{},"classes/Category.html":{},"injectables/CategoryService.html":{},"classes/CreateCategoryDto.html":{},"modules/DatabaseModule.html":{},"modules/DishModules.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":174,"title":{},"body":{"coverage.html":{}}}],["0.0.1",{"_index":281,"title":{},"body":{"properties.html":{}}}],["0.1.13",{"_index":202,"title":{},"body":{"dependencies.html":{}}}],["0.13.2",{"_index":197,"title":{},"body":{"dependencies.html":{}}}],["0.5.1",{"_index":196,"title":{},"body":{"dependencies.html":{}}}],["0/1",{"_index":178,"title":{},"body":{"coverage.html":{}}}],["0/2",{"_index":175,"title":{},"body":{"coverage.html":{}}}],["0/4",{"_index":176,"title":{},"body":{"coverage.html":{}}}],["1/5",{"_index":180,"title":{},"body":{"coverage.html":{}}}],["17.6.0",{"_index":198,"title":{},"body":{"dependencies.html":{}}}],["2",{"_index":279,"title":{},"body":{"overview.html":{}}}],["2.1.0",{"_index":188,"title":{},"body":{"dependencies.html":{}}}],["20",{"_index":179,"title":{},"body":{"coverage.html":{}}}],["3",{"_index":278,"title":{},"body":{"overview.html":{}}}],["3.0.2",{"_index":204,"title":{},"body":{"dependencies.html":{}}}],["4.4.0",{"_index":209,"title":{},"body":{"dependencies.html":{}}}],["5.2.1",{"_index":194,"title":{},"body":{"dependencies.html":{}}}],["6.4.1",{"_index":199,"title":{},"body":{"dependencies.html":{}}}],["7.2.0",{"_index":206,"title":{},"body":{"dependencies.html":{}}}],["8.0.0",{"_index":187,"title":{},"body":{"dependencies.html":{}}}],["9.1.1",{"_index":190,"title":{},"body":{"dependencies.html":{}}}],["aliases",{"_index":284,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["already",{"_index":140,"title":{},"body":{"injectables/CategoryService.html":{}}}],["amazing",{"_index":254,"title":{},"body":{"index.html":{}}}],["app",{"_index":231,"title":{},"body":{"index.html":{}}}],["app.controller",{"_index":44,"title":{},"body":{"modules/AppModule.html":{}}}],["app.service",{"_index":19,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{}}}],["appcontroller",{"_index":1,"title":{"controllers/AppController.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"coverage.html":{}}}],["applications",{"_index":223,"title":{},"body":{"index.html":{}}}],["appmodule",{"_index":29,"title":{"modules/AppModule.html":{}},"body":{"modules/AppModule.html":{},"modules.html":{},"overview.html":{}}}],["appservice",{"_index":18,"title":{"injectables/AppService.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"coverage.html":{},"overview.html":{}}}],["async",{"_index":64,"title":{},"body":{"controllers/CategeoryController.html":{},"injectables/CategoryService.html":{},"modules/DatabaseModule.html":{}}}],["author",{"_index":264,"title":{},"body":{"index.html":{},"properties.html":{}}}],["available",{"_index":276,"title":{},"body":{"modules.html":{}}}],["await",{"_index":137,"title":{},"body":{"injectables/CategoryService.html":{}}}],["backers",{"_index":255,"title":{},"body":{"index.html":{}}}],["body",{"_index":86,"title":{},"body":{"controllers/CategeoryController.html":{}}}],["bootstrap",{"_index":183,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["browse",{"_index":274,"title":{},"body":{"modules.html":{}}}],["browser",{"_index":272,"title":{},"body":{"modules.html":{}}}],["building",{"_index":218,"title":{},"body":{"index.html":{}}}],["categeorycontroller",{"_index":60,"title":{"controllers/CategeoryController.html":{}},"body":{"controllers/CategeoryController.html":{},"modules/DishModules.html":{},"coverage.html":{}}}],["categories",{"_index":63,"title":{},"body":{"controllers/CategeoryController.html":{},"injectables/CategoryService.html":{}}}],["category",{"_index":96,"title":{"classes/Category.html":{}},"body":{"classes/Category.html":{},"injectables/CategoryService.html":{},"modules/DishModules.html":{},"coverage.html":{}}}],["category.name",{"_index":169,"title":{},"body":{"modules/DishModules.html":{}}}],["category.save",{"_index":143,"title":{},"body":{"injectables/CategoryService.html":{}}}],["categorydocument",{"_index":109,"title":{},"body":{"classes/Category.html":{},"injectables/CategoryService.html":{},"miscellaneous/typealiases.html":{}}}],["categoryexist",{"_index":136,"title":{},"body":{"injectables/CategoryService.html":{}}}],["categorymodel",{"_index":119,"title":{},"body":{"injectables/CategoryService.html":{}}}],["categoryschema",{"_index":112,"title":{},"body":{"classes/Category.html":{},"modules/DishModules.html":{},"coverage.html":{},"miscellaneous/variables.html":{}}}],["categoryservice",{"_index":84,"title":{"injectables/CategoryService.html":{}},"body":{"controllers/CategeoryController.html":{},"injectables/CategoryService.html":{},"modules/DishModules.html":{},"coverage.html":{},"overview.html":{}}}],["class",{"_index":21,"title":{"classes/Category.html":{},"classes/CreateCategoryDto.html":{}},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CategeoryController.html":{},"classes/Category.html":{},"injectables/CategoryService.html":{},"classes/CreateCategoryDto.html":{},"modules/DatabaseModule.html":{},"modules/DishModules.html":{},"coverage.html":{},"dependencies.html":{}}}],["classes",{"_index":97,"title":{},"body":{"classes/Category.html":{},"classes/CreateCategoryDto.html":{},"overview.html":{}}}],["cluster_appmodule",{"_index":32,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_imports",{"_index":34,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_appmodule_providers",{"_index":33,"title":{},"body":{"modules/AppModule.html":{},"overview.html":{}}}],["cluster_dishmodules",{"_index":164,"title":{},"body":{"modules/DishModules.html":{},"overview.html":{}}}],["cluster_dishmodules_providers",{"_index":165,"title":{},"body":{"modules/DishModules.html":{},"overview.html":{}}}],["collection",{"_index":124,"title":{},"body":{"injectables/CategoryService.html":{}}}],["configmodule",{"_index":42,"title":{},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{}}}],["configmodule.forroot",{"_index":47,"title":{},"body":{"modules/AppModule.html":{}}}],["configservice",{"_index":156,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["configservice.get('mongo_url",{"_index":161,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["const",{"_index":111,"title":{},"body":{"classes/Category.html":{},"injectables/CategoryService.html":{}}}],["constructor",{"_index":115,"title":{},"body":{"injectables/CategoryService.html":{}}}],["constructor(categorymodel",{"_index":116,"title":{},"body":{"injectables/CategoryService.html":{}}}],["constructor(private",{"_index":22,"title":{},"body":{"controllers/AppController.html":{},"controllers/CategeoryController.html":{}}}],["controller",{"_index":0,"title":{"controllers/AppController.html":{},"controllers/CategeoryController.html":{}},"body":{"controllers/AppController.html":{},"controllers/CategeoryController.html":{},"coverage.html":{}}}],["controller('categories",{"_index":90,"title":{},"body":{"controllers/CategeoryController.html":{}}}],["controllers",{"_index":2,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"controllers/CategeoryController.html":{},"modules/DishModules.html":{},"overview.html":{}}}],["controllers/category.controller",{"_index":167,"title":{},"body":{"modules/DishModules.html":{}}}],["coverage",{"_index":170,"title":{"coverage.html":{}},"body":{"coverage.html":{},"index.html":{}}}],["create",{"_index":65,"title":{},"body":{"controllers/CategeoryController.html":{},"injectables/CategoryService.html":{}}}],["create(@body",{"_index":91,"title":{},"body":{"controllers/CategeoryController.html":{}}}],["create(data",{"_index":68,"title":{},"body":{"controllers/CategeoryController.html":{},"injectables/CategoryService.html":{}}}],["createcategorydto",{"_index":69,"title":{"classes/CreateCategoryDto.html":{}},"body":{"controllers/CategeoryController.html":{},"injectables/CategoryService.html":{},"classes/CreateCategoryDto.html":{},"coverage.html":{}}}],["creates",{"_index":135,"title":{},"body":{"injectables/CategoryService.html":{}}}],["data",{"_index":76,"title":{},"body":{"controllers/CategeoryController.html":{},"injectables/CategoryService.html":{}}}],["database",{"_index":129,"title":{},"body":{"injectables/CategoryService.html":{}}}],["database/database.module",{"_index":46,"title":{},"body":{"modules/AppModule.html":{}}}],["databasemodule",{"_index":35,"title":{"modules/DatabaseModule.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules.html":{},"overview.html":{}}}],["decorators",{"_index":10,"title":{},"body":{"controllers/AppController.html":{},"controllers/CategeoryController.html":{},"classes/Category.html":{},"classes/CreateCategoryDto.html":{}}}],["default",{"_index":287,"title":{},"body":{"miscellaneous/variables.html":{}}}],["defined",{"_index":12,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/CategeoryController.html":{},"classes/Category.html":{},"injectables/CategoryService.html":{},"classes/CreateCategoryDto.html":{}}}],["dependencies",{"_index":31,"title":{"dependencies.html":{}},"body":{"modules/AppModule.html":{},"modules/DishModules.html":{},"dependencies.html":{},"overview.html":{}}}],["description",{"_index":126,"title":{},"body":{"injectables/CategoryService.html":{},"index.html":{},"properties.html":{}}}],["development",{"_index":232,"title":{},"body":{"index.html":{}}}],["dishmodules",{"_index":163,"title":{"modules/DishModules.html":{}},"body":{"modules/DishModules.html":{},"modules.html":{},"overview.html":{}}}],["document",{"_index":107,"title":{},"body":{"classes/Category.html":{}}}],["documentation",{"_index":171,"title":{},"body":{"coverage.html":{}}}],["doesnt",{"_index":145,"title":{},"body":{"injectables/CategoryService.html":{}}}],["dtos/createcategory.dto",{"_index":89,"title":{},"body":{"controllers/CategeoryController.html":{},"injectables/CategoryService.html":{}}}],["e2e",{"_index":243,"title":{},"body":{"index.html":{}}}],["efficient",{"_index":219,"title":{},"body":{"index.html":{}}}],["env",{"_index":49,"title":{},"body":{"modules/AppModule.html":{}}}],["envfilepath",{"_index":48,"title":{},"body":{"modules/AppModule.html":{}}}],["exist",{"_index":141,"title":{},"body":{"injectables/CategoryService.html":{}}}],["export",{"_index":20,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CategeoryController.html":{},"classes/Category.html":{},"injectables/CategoryService.html":{},"classes/CreateCategoryDto.html":{},"modules/DatabaseModule.html":{},"modules/DishModules.html":{}}}],["express",{"_index":192,"title":{},"body":{"dependencies.html":{}}}],["fetches",{"_index":146,"title":{},"body":{"injectables/CategoryService.html":{}}}],["file",{"_index":5,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CategeoryController.html":{},"classes/Category.html":{},"injectables/CategoryService.html":{},"classes/CreateCategoryDto.html":{},"modules/DatabaseModule.html":{},"modules/DishModules.html":{},"coverage.html":{}}}],["findall",{"_index":66,"title":{},"body":{"controllers/CategeoryController.html":{},"injectables/CategoryService.html":{}}}],["findone",{"_index":67,"title":{},"body":{"controllers/CategeoryController.html":{},"injectables/CategoryService.html":{}}}],["findone(@param('id",{"_index":94,"title":{},"body":{"controllers/CategeoryController.html":{}}}],["findone(id",{"_index":79,"title":{},"body":{"controllers/CategeoryController.html":{},"injectables/CategoryService.html":{}}}],["finds",{"_index":127,"title":{},"body":{"injectables/CategoryService.html":{}}}],["framework",{"_index":217,"title":{},"body":{"index.html":{}}}],["function",{"_index":182,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":211,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["get(':id",{"_index":81,"title":{},"body":{"controllers/CategeoryController.html":{}}}],["gethello",{"_index":9,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{}}}],["getting",{"_index":213,"title":{"index.html":{}},"body":{}}],["graph",{"_index":275,"title":{},"body":{"modules.html":{}}}],["grow",{"_index":250,"title":{},"body":{"index.html":{}}}],["hello",{"_index":58,"title":{},"body":{"injectables/AppService.html":{}}}],["here",{"_index":261,"title":{},"body":{"index.html":{}}}],["https://nestjs.com",{"_index":268,"title":{},"body":{"index.html":{}}}],["id",{"_index":83,"title":{},"body":{"controllers/CategeoryController.html":{},"injectables/CategoryService.html":{}}}],["identifier",{"_index":172,"title":{},"body":{"coverage.html":{}}}],["import",{"_index":16,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CategeoryController.html":{},"classes/Category.html":{},"injectables/CategoryService.html":{},"classes/CreateCategoryDto.html":{},"modules/DatabaseModule.html":{},"modules/DishModules.html":{}}}],["imports",{"_index":41,"title":{},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules/DishModules.html":{}}}],["index",{"_index":7,"title":{"index.html":{}},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/CategeoryController.html":{},"classes/Category.html":{},"injectables/CategoryService.html":{},"classes/CreateCategoryDto.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["info",{"_index":3,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CategeoryController.html":{},"classes/Category.html":{},"injectables/CategoryService.html":{},"classes/CreateCategoryDto.html":{},"modules/DatabaseModule.html":{},"modules/DishModules.html":{}}}],["inject",{"_index":162,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["injectable",{"_index":54,"title":{"injectables/AppService.html":{},"injectables/CategoryService.html":{}},"body":{"injectables/AppService.html":{},"injectables/CategoryService.html":{},"coverage.html":{}}}],["injectables",{"_index":55,"title":{},"body":{"injectables/AppService.html":{},"injectables/CategoryService.html":{},"overview.html":{}}}],["injectmodel",{"_index":131,"title":{},"body":{"injectables/CategoryService.html":{}}}],["injectmodel(category.name",{"_index":133,"title":{},"body":{"injectables/CategoryService.html":{}}}],["installation",{"_index":228,"title":{},"body":{"index.html":{}}}],["installrunning",{"_index":230,"title":{},"body":{"index.html":{}}}],["isstring",{"_index":151,"title":{},"body":{"classes/CreateCategoryDto.html":{}}}],["isstring()@length(3",{"_index":149,"title":{},"body":{"classes/CreateCategoryDto.html":{}}}],["joi",{"_index":45,"title":{},"body":{"modules/AppModule.html":{},"dependencies.html":{}}}],["joi.object",{"_index":51,"title":{},"body":{"modules/AppModule.html":{}}}],["joi.string().required",{"_index":53,"title":{},"body":{"modules/AppModule.html":{}}}],["join",{"_index":257,"title":{},"body":{"index.html":{}}}],["kamil",{"_index":265,"title":{},"body":{"index.html":{}}}],["length",{"_index":152,"title":{},"body":{"classes/CreateCategoryDto.html":{}}}],["length(3",{"_index":154,"title":{},"body":{"classes/CreateCategoryDto.html":{}}}],["license",{"_index":271,"title":{},"body":{"index.html":{},"properties.html":{}}}],["licensed",{"_index":247,"title":{},"body":{"index.html":{}}}],["matching",{"_index":27,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CategeoryController.html":{},"classes/Category.html":{},"injectables/CategoryService.html":{},"classes/CreateCategoryDto.html":{},"modules/DatabaseModule.html":{},"modules/DishModules.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":201,"title":{},"body":{"dependencies.html":{}}}],["methods",{"_index":8,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/CategeoryController.html":{},"injectables/CategoryService.html":{}}}],["miscellaneous",{"_index":210,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":246,"title":{},"body":{"index.html":{}}}],["mode",{"_index":236,"title":{},"body":{"index.html":{}}}],["model",{"_index":117,"title":{},"body":{"injectables/CategoryService.html":{}}}],["module",{"_index":28,"title":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules/DishModules.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules/DishModules.html":{}}}],["modules",{"_index":30,"title":{"modules.html":{}},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"modules/DishModules.html":{},"modules.html":{},"overview.html":{}}}],["mongo_url",{"_index":52,"title":{},"body":{"modules/AppModule.html":{}}}],["mongoose",{"_index":108,"title":{},"body":{"classes/Category.html":{},"injectables/CategoryService.html":{},"dependencies.html":{}}}],["mongoosemodule",{"_index":157,"title":{},"body":{"modules/DatabaseModule.html":{},"modules/DishModules.html":{}}}],["mongoosemodule.forfeature",{"_index":168,"title":{},"body":{"modules/DishModules.html":{}}}],["mongoosemodule.forrootasync",{"_index":158,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["more",{"_index":260,"title":{},"body":{"index.html":{}}}],["myśliwiec",{"_index":266,"title":{},"body":{"index.html":{}}}],["name",{"_index":73,"title":{},"body":{"controllers/CategeoryController.html":{},"classes/Category.html":{},"injectables/CategoryService.html":{},"classes/CreateCategoryDto.html":{},"modules/DishModules.html":{}}}],["nest",{"_index":224,"title":{},"body":{"index.html":{}}}],["nestframework",{"_index":270,"title":{},"body":{"index.html":{}}}],["nestjs/common",{"_index":17,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CategeoryController.html":{},"injectables/CategoryService.html":{},"modules/DatabaseModule.html":{},"modules/DishModules.html":{},"dependencies.html":{}}}],["nestjs/config",{"_index":43,"title":{},"body":{"modules/AppModule.html":{},"modules/DatabaseModule.html":{},"dependencies.html":{}}}],["nestjs/core",{"_index":189,"title":{},"body":{"dependencies.html":{}}}],["nestjs/mongoose",{"_index":106,"title":{},"body":{"classes/Category.html":{},"injectables/CategoryService.html":{},"modules/DatabaseModule.html":{},"modules/DishModules.html":{},"dependencies.html":{}}}],["nestjs/platform",{"_index":191,"title":{},"body":{"dependencies.html":{}}}],["nestjs/swagger",{"_index":193,"title":{},"body":{"dependencies.html":{}}}],["new",{"_index":121,"title":{},"body":{"injectables/CategoryService.html":{},"coverage.html":{}}}],["node.js",{"_index":216,"title":{},"body":{"index.html":{}}}],["npm",{"_index":229,"title":{},"body":{"index.html":{}}}],["number",{"_index":80,"title":{},"body":{"controllers/CategeoryController.html":{},"injectables/CategoryService.html":{}}}],["open",{"_index":248,"title":{},"body":{"index.html":{}}}],["optional",{"_index":75,"title":{},"body":{"controllers/CategeoryController.html":{},"injectables/CategoryService.html":{}}}],["out",{"_index":38,"title":{},"body":{"modules/AppModule.html":{},"modules/DishModules.html":{},"overview.html":{}}}],["overview",{"_index":277,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":186,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["param",{"_index":87,"title":{},"body":{"controllers/CategeoryController.html":{},"injectables/CategoryService.html":{}}}],["parameters",{"_index":72,"title":{},"body":{"controllers/CategeoryController.html":{},"injectables/CategoryService.html":{}}}],["parseintpipe",{"_index":88,"title":{},"body":{"controllers/CategeoryController.html":{}}}],["please",{"_index":258,"title":{},"body":{"index.html":{}}}],["post",{"_index":70,"title":{},"body":{"controllers/CategeoryController.html":{}}}],["prefix",{"_index":62,"title":{},"body":{"controllers/CategeoryController.html":{}}}],["private",{"_index":134,"title":{},"body":{"injectables/CategoryService.html":{}}}],["production",{"_index":238,"title":{},"body":{"index.html":{}}}],["progressive",{"_index":215,"title":{},"body":{"index.html":{}}}],["project",{"_index":249,"title":{},"body":{"index.html":{}}}],["promise",{"_index":123,"title":{},"body":{"injectables/CategoryService.html":{}}}],["prop",{"_index":103,"title":{},"body":{"classes/Category.html":{}}}],["prop({required",{"_index":100,"title":{},"body":{"classes/Category.html":{}}}],["properties",{"_index":99,"title":{"properties.html":{}},"body":{"classes/Category.html":{},"classes/CreateCategoryDto.html":{},"properties.html":{}}}],["providers",{"_index":40,"title":{},"body":{"modules/AppModule.html":{},"modules/DishModules.html":{}}}],["read",{"_index":259,"title":{},"body":{"index.html":{}}}],["readonly",{"_index":23,"title":{},"body":{"controllers/AppController.html":{},"controllers/CategeoryController.html":{},"injectables/CategoryService.html":{}}}],["reflect",{"_index":200,"title":{},"body":{"dependencies.html":{}}}],["repository",{"_index":227,"title":{},"body":{"index.html":{}}}],["required",{"_index":110,"title":{},"body":{"classes/Category.html":{}}}],["reset",{"_index":37,"title":{},"body":{"modules/AppModule.html":{},"modules/DishModules.html":{},"overview.html":{}}}],["results",{"_index":26,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CategeoryController.html":{},"classes/Category.html":{},"injectables/CategoryService.html":{},"classes/CreateCategoryDto.html":{},"modules/DatabaseModule.html":{},"modules/DishModules.html":{},"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":24,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/CategeoryController.html":{},"injectables/CategoryService.html":{}}}],["returns",{"_index":14,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"controllers/CategeoryController.html":{},"injectables/CategoryService.html":{}}}],["rimraf",{"_index":203,"title":{},"body":{"dependencies.html":{}}}],["run",{"_index":233,"title":{},"body":{"index.html":{}}}],["rxjs",{"_index":205,"title":{},"body":{"dependencies.html":{}}}],["scalable",{"_index":220,"title":{},"body":{"index.html":{}}}],["schema",{"_index":104,"title":{},"body":{"classes/Category.html":{},"modules/DishModules.html":{}}}],["schema/category.schema",{"_index":132,"title":{},"body":{"injectables/CategoryService.html":{},"modules/DishModules.html":{}}}],["schemafactory",{"_index":105,"title":{},"body":{"classes/Category.html":{}}}],["schemafactory.createforclass(category",{"_index":113,"title":{},"body":{"classes/Category.html":{},"miscellaneous/variables.html":{}}}],["server",{"_index":221,"title":{},"body":{"index.html":{}}}],["services/category.service",{"_index":85,"title":{},"body":{"controllers/CategeoryController.html":{},"modules/DishModules.html":{}}}],["side",{"_index":222,"title":{},"body":{"index.html":{}}}],["single",{"_index":128,"title":{},"body":{"injectables/CategoryService.html":{}}}],["source",{"_index":4,"title":{},"body":{"controllers/AppController.html":{},"modules/AppModule.html":{},"injectables/AppService.html":{},"controllers/CategeoryController.html":{},"classes/Category.html":{},"injectables/CategoryService.html":{},"classes/CreateCategoryDto.html":{},"modules/DatabaseModule.html":{},"modules/DishModules.html":{},"index.html":{}}}],["sponsors",{"_index":252,"title":{},"body":{"index.html":{}}}],["src/.../category.schema.ts",{"_index":285,"title":{},"body":{"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/.../main.ts",{"_index":212,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/app.controller.ts",{"_index":6,"title":{},"body":{"controllers/AppController.html":{},"coverage.html":{}}}],["src/app.controller.ts:9",{"_index":13,"title":{},"body":{"controllers/AppController.html":{}}}],["src/app.module.ts",{"_index":39,"title":{},"body":{"modules/AppModule.html":{}}}],["src/app.service.ts",{"_index":56,"title":{},"body":{"injectables/AppService.html":{},"coverage.html":{}}}],["src/app.service.ts:5",{"_index":57,"title":{},"body":{"injectables/AppService.html":{}}}],["src/database/database.module.ts",{"_index":155,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["src/dish/controllers/category.controller.ts",{"_index":61,"title":{},"body":{"controllers/CategeoryController.html":{},"coverage.html":{}}}],["src/dish/controllers/category.controller.ts:17",{"_index":71,"title":{},"body":{"controllers/CategeoryController.html":{}}}],["src/dish/controllers/category.controller.ts:22",{"_index":78,"title":{},"body":{"controllers/CategeoryController.html":{}}}],["src/dish/controllers/category.controller.ts:27",{"_index":82,"title":{},"body":{"controllers/CategeoryController.html":{}}}],["src/dish/dish.module.ts",{"_index":166,"title":{},"body":{"modules/DishModules.html":{}}}],["src/dish/dtos/createcategory.dto.ts",{"_index":148,"title":{},"body":{"classes/CreateCategoryDto.html":{},"coverage.html":{}}}],["src/dish/dtos/createcategory.dto.ts:6",{"_index":150,"title":{},"body":{"classes/CreateCategoryDto.html":{}}}],["src/dish/schema/category.schema.ts",{"_index":98,"title":{},"body":{"classes/Category.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["src/dish/schema/category.schema.ts:9",{"_index":102,"title":{},"body":{"classes/Category.html":{}}}],["src/dish/services/category.service.ts",{"_index":114,"title":{},"body":{"injectables/CategoryService.html":{},"coverage.html":{}}}],["src/dish/services/category.service.ts:20",{"_index":120,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/dish/services/category.service.ts:38",{"_index":125,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/dish/services/category.service.ts:53",{"_index":122,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/dish/services/category.service.ts:8",{"_index":118,"title":{},"body":{"injectables/CategoryService.html":{}}}],["src/main.ts",{"_index":181,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["start",{"_index":234,"title":{},"body":{"index.html":{}}}],["start:dev",{"_index":237,"title":{},"body":{"index.html":{}}}],["start:prodtest",{"_index":239,"title":{},"body":{"index.html":{}}}],["started",{"_index":214,"title":{"index.html":{}},"body":{}}],["starter",{"_index":226,"title":{},"body":{"index.html":{}}}],["statements",{"_index":173,"title":{},"body":{"coverage.html":{}}}],["stay",{"_index":262,"title":{},"body":{"index.html":{}}}],["string",{"_index":15,"title":{},"body":{"controllers/AppController.html":{},"injectables/AppService.html":{},"classes/Category.html":{},"classes/CreateCategoryDto.html":{}}}],["support",{"_index":253,"title":{},"body":{"index.html":{},"modules.html":{}}}],["svg",{"_index":273,"title":{},"body":{"modules.html":{}}}],["swagger",{"_index":207,"title":{},"body":{"dependencies.html":{}}}],["table",{"_index":185,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":184,"title":{},"body":{"coverage.html":{}}}],["test",{"_index":242,"title":{},"body":{"index.html":{}}}],["test:covsupport",{"_index":245,"title":{},"body":{"index.html":{}}}],["test:e2e",{"_index":244,"title":{},"body":{"index.html":{}}}],["tests",{"_index":241,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":251,"title":{},"body":{"index.html":{}}}],["this.appservice.gethello",{"_index":25,"title":{},"body":{"controllers/AppController.html":{}}}],["this.categorymodel",{"_index":142,"title":{},"body":{"injectables/CategoryService.html":{}}}],["this.categorymodel.find",{"_index":147,"title":{},"body":{"injectables/CategoryService.html":{}}}],["this.categorymodel.findbyid(id",{"_index":144,"title":{},"body":{"injectables/CategoryService.html":{}}}],["this.categorymodel.findone",{"_index":138,"title":{},"body":{"injectables/CategoryService.html":{}}}],["this.categoryservice.create(data",{"_index":92,"title":{},"body":{"controllers/CategeoryController.html":{}}}],["this.categoryservice.findall",{"_index":93,"title":{},"body":{"controllers/CategeoryController.html":{}}}],["this.categoryservice.findone(id",{"_index":95,"title":{},"body":{"controllers/CategeoryController.html":{}}}],["throw",{"_index":139,"title":{},"body":{"injectables/CategoryService.html":{}}}],["touch",{"_index":263,"title":{},"body":{"index.html":{}}}],["transformer",{"_index":195,"title":{},"body":{"dependencies.html":{}}}],["true",{"_index":101,"title":{},"body":{"classes/Category.html":{}}}],["twitter",{"_index":269,"title":{},"body":{"index.html":{}}}],["type",{"_index":74,"title":{},"body":{"controllers/CategeoryController.html":{},"classes/Category.html":{},"injectables/CategoryService.html":{},"classes/CreateCategoryDto.html":{},"coverage.html":{},"miscellaneous/typealiases.html":{}}}],["typealiases",{"_index":283,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typescript",{"_index":225,"title":{},"body":{"index.html":{}}}],["ui",{"_index":208,"title":{},"body":{"dependencies.html":{}}}],["unit",{"_index":240,"title":{},"body":{"index.html":{}}}],["unknown",{"_index":77,"title":{},"body":{"controllers/CategeoryController.html":{}}}],["unlicensed",{"_index":282,"title":{},"body":{"properties.html":{}}}],["unprocessableentityexception",{"_index":130,"title":{},"body":{"injectables/CategoryService.html":{}}}],["uri",{"_index":160,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["usefactory",{"_index":159,"title":{},"body":{"modules/DatabaseModule.html":{}}}],["validationschema",{"_index":50,"title":{},"body":{"modules/AppModule.html":{}}}],["validator",{"_index":153,"title":{},"body":{"classes/CreateCategoryDto.html":{},"dependencies.html":{}}}],["value",{"_index":288,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":177,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":286,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":280,"title":{},"body":{"properties.html":{}}}],["watch",{"_index":235,"title":{},"body":{"index.html":{}}}],["website",{"_index":267,"title":{},"body":{"index.html":{}}}],["world",{"_index":59,"title":{},"body":{"injectables/AppService.html":{}}}],["you'd",{"_index":256,"title":{},"body":{"index.html":{}}}],["zoom",{"_index":36,"title":{},"body":{"modules/AppModule.html":{},"modules/DishModules.html":{},"overview.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"controllers/AppController.html":{"url":"controllers/AppController.html","title":"controller - AppController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  AppController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.controller.ts\n        \n\n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/app.controller.ts:9\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { Controller, Get } from '@nestjs/common';\nimport { AppService } from './app.service';\n\n@Controller()\nexport class AppController {\n  constructor(private readonly appService: AppService) {}\n\n  @Get()\n  getHello(): string {\n    return this.appService.getHello();\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/AppModule.html":{"url":"modules/AppModule.html","title":"module - AppModule","body":"\n                   \n\n\n\n\n    Modules\n    AppModule\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_AppModule_imports\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/app.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            AppService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            AppController\n                        \n                    \n                \n                \n                    Imports\n                    \n                        \n                            DatabaseModule\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { Module } from '@nestjs/common';\nimport { ConfigModule } from '@nestjs/config';\nimport { AppController } from './app.controller';\nimport { AppService } from './app.service';\nimport * as joi from 'joi';\nimport { DatabaseModule } from './database/database.module';\n\n@Module({\n  imports: [\n    ConfigModule.forRoot({\n      envFilePath: '.env',\n      validationSchema: joi.object({\n        MONGO_URL: joi.string().required(),\n      }),\n    }),\n    DatabaseModule,\n  ],\n  controllers: [AppController],\n  providers: [AppService],\n})\nexport class AppModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/AppService.html":{"url":"injectables/AppService.html","title":"injectable - AppService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  AppService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/app.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                getHello\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        getHello\n                        \n                    \n                \n            \n            \n                \ngetHello()\n                \n            \n\n\n            \n                \n                    Defined in src/app.service.ts:5\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :         string\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { Injectable } from '@nestjs/common';\n\n@Injectable()\nexport class AppService {\n  getHello(): string {\n    return 'Hello World!';\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"controllers/CategeoryController.html":{"url":"controllers/CategeoryController.html","title":"controller - CategeoryController","body":"\n                   \n\n\n\n\n\n\n  Controllers\n  CategeoryController\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dish/controllers/category.controller.ts\n        \n\n            \n                Prefix\n            \n            \n                categories\n            \n\n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(data: CreateCategoryDto)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Post()\n                \n            \n\n            \n                \n                    Defined in src/dish/controllers/category.controller.ts:17\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateCategoryDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get()\n                \n            \n\n            \n                \n                    Defined in src/dish/controllers/category.controller.ts:22\n                \n            \n\n\n            \n                \n\n                    \n                        Returns :     unknown\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n            \n                \n                    Decorators : \n                    \n                    @Get(':id')\n                \n            \n\n            \n                \n                    Defined in src/dish/controllers/category.controller.ts:27\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     unknown\n\n                    \n                    \n                        \n                    \n                \n            \n        \n    \n    \n\n\n    \n        import { CategoryService } from './../services/category.service';\nimport {\n  Body,\n  Controller,\n  Get,\n  Param,\n  ParseIntPipe,\n  Post,\n} from '@nestjs/common';\nimport { CreateCategoryDto } from '../dtos/createCategory.dto';\n\n@Controller('categories')\nexport class CategeoryController {\n  constructor(private readonly categoryService: CategoryService) {}\n\n  @Post()\n  async create(@Body() data: CreateCategoryDto) {\n    return this.categoryService.create(data);\n  }\n\n  @Get()\n  async findAll() {\n    return this.categoryService.findAll();\n  }\n\n  @Get(':id')\n  async findOne(@Param('id', ParseIntPipe) id: number) {\n    return this.categoryService.findOne(id);\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/Category.html":{"url":"classes/Category.html","title":"class - Category","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  Category\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dish/schema/category.schema.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @Prop({required: true})\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dish/schema/category.schema.ts:9\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { Prop, Schema, SchemaFactory } from '@nestjs/mongoose';\nimport { Document } from 'mongoose';\n\nexport type CategoryDocument = Category & Document;\n\n@Schema()\nexport class Category {\n  @Prop({ required: true })\n  name: string;\n}\n\nexport const CategorySchema = SchemaFactory.createForClass(Category);\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"injectables/CategoryService.html":{"url":"injectables/CategoryService.html","title":"injectable - CategoryService","body":"\n                   \n\n\n\n\n\n\n\n\n\n  Injectables\n  CategoryService\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dish/services/category.service.ts\n        \n\n\n\n\n\n            \n    Index\n    \n        \n\n                \n                    \n                        Methods\n                    \n                \n                \n                    \n                        \n                            \n                                    Async\n                                create\n                            \n                            \n                                    Async\n                                findAll\n                            \n                            \n                                    Async\n                                findOne\n                            \n                        \n                    \n                \n\n\n\n\n\n        \n    \n\n\n            \n    Constructor\n        \n            \n                \n                    \nconstructor(categoryModel: Model)\n                    \n                \n                        \n                            \n                                Defined in src/dish/services/category.service.ts:8\n                            \n                        \n\n                \n                    \n                            \n                                    Parameters :\n                                    \n                                        \n                                            \n                                                Name\n                                                    Type\n                                                Optional\n                                            \n                                        \n                                        \n                                                \n                                                        categoryModel\n                                                  \n                                                        \n                                                                        Model\n                                                        \n                                                  \n                                                    \n                                                            No\n                                                    \n                                                    \n                                                \n                                        \n                                    \n                            \n                    \n                \n            \n        \n\n\n            \n    \n    \n        Methods\n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        create\n                        \n                    \n                \n            \n            \n                \n                    \n                    create(data: CreateCategoryDto)\n                \n            \n\n\n            \n                \n                    Defined in src/dish/services/category.service.ts:20\n                \n            \n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    data\n                                    \n                                                CreateCategoryDto\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         any\n\n                    \n                    \n                        a new category\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findAll\n                        \n                    \n                \n            \n            \n                \n                    \n                    findAll()\n                \n            \n\n\n            \n                \n                    Defined in src/dish/services/category.service.ts:53\n                \n            \n\n\n            \n                \n\n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        a collection of categories\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        Async\n                        findOne\n                        \n                    \n                \n            \n            \n                \n                    \n                    findOne(id: number)\n                \n            \n\n\n            \n                \n                    Defined in src/dish/services/category.service.ts:38\n                \n            \n\n\n            \n                \n                     @description finds a single category in the database\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    id\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :         Promise\n\n                    \n                    \n                        a single category\n\n                    \n                \n            \n        \n    \n\n\n    \n\n\n    \n        import { CreateCategoryDto } from './../dtos/createCategory.dto';\nimport { Injectable, UnprocessableEntityException } from '@nestjs/common';\nimport { InjectModel } from '@nestjs/mongoose';\nimport { Model } from 'mongoose';\nimport { Category, CategoryDocument } from '../schema/category.schema';\n\n@Injectable()\nexport class CategoryService {\n  constructor(\n    @InjectModel(Category.name)\n    private readonly categoryModel: Model,\n  ) {}\n\n  /**\n   * @description creates a new category\n   *\n   * @param {CreateCategoryDto}\n   * @returns {Promise} a new category\n   */\n  async create(data: CreateCategoryDto) {\n    const { name } = data;\n    const categoryExist = await this.categoryModel.findOne({ name });\n    if (categoryExist) {\n      throw new UnprocessableEntityException(\n        `Category with ${name} already exist`,\n      );\n    }\n    const category = new this.categoryModel({ name });\n    await category.save();\n  }\n\n  /**\n   *  @description finds a single category in the database\n   *\n   * @param id\n   * @returns {Promise} a single category\n   */\n  async findOne(id: number): Promise {\n    const category = await this.categoryModel.findById(id);\n    if (!category) {\n      throw new UnprocessableEntityException(\n        `Category with ${id} doesnt exist`,\n      );\n    }\n    return category;\n  }\n\n  /**\n   * @description fetches categories from database\n   *\n   * @returns {Promise} a collection of categories\n   */\n  async findAll(): Promise {\n    const category = await this.categoryModel.find();\n    return category;\n  }\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"classes/CreateCategoryDto.html":{"url":"classes/CreateCategoryDto.html","title":"class - CreateCategoryDto","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n  Classes\n  CreateCategoryDto\n\n\n\n        \n            Info\n        \n        \n            Source\n        \n\n\n\n    \n        \n            File\n        \n        \n            src/dish/dtos/createCategory.dto.ts\n        \n\n\n\n\n\n\n            \n    Index\n    \n        \n                \n                    \n                        Properties\n                    \n                \n                \n                    \n                        \n                            \n                                name\n                            \n                        \n                    \n                \n\n\n\n\n\n\n        \n    \n\n\n\n            \n    \n    \n        Properties\n    \n    \n        \n            \n                \n                    \n                    \n                        name\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Decorators : \n                        \n                        \n                            @IsString()@Length(3)\n                        \n                    \n                \n                    \n                        \n                                Defined in src/dish/dtos/createCategory.dto.ts:6\n                        \n                    \n\n\n        \n    \n\n\n\n\n\n\n\n\n    \n\n\n    \n        import { IsString, Length } from 'class-validator';\n\nexport class CreateCategoryDto {\n  @IsString()\n  @Length(3)\n  name: string;\n}\n\n    \n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DatabaseModule.html":{"url":"modules/DatabaseModule.html","title":"module - DatabaseModule","body":"\n                   \n\n\n\n\n    Modules\n    DatabaseModule\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/database/database.module.ts\n        \n\n\n\n\n\n        \n            \n            \n        \n\n\n    \n\n\n    \n        import { ConfigService } from '@nestjs/config';\nimport { ConfigModule } from '@nestjs/config';\nimport { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\n\n@Module({\n  imports: [\n    MongooseModule.forRootAsync({\n      imports: [ConfigModule],\n      useFactory: async (configService: ConfigService) => ({\n        uri: configService.get('MONGO_URL'),\n      }),\n      inject: [ConfigService],\n    }),\n  ],\n})\nexport class DatabaseModule {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules/DishModules.html":{"url":"modules/DishModules.html","title":"module - DishModules","body":"\n                   \n\n\n\n\n    Modules\n    DishModules\n\n\n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_DishModules\n\n\n\ncluster_DishModules_providers\n\n\n\n\nCategoryService\n\nCategoryService\n\n\n\nDishModules\n\nDishModules\n\nDishModules -->\n\nCategoryService->DishModules\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n\n\n\n\n    \n        Info\n    \n    \n        Source\n    \n\n\n\n    \n\n        \n            File\n        \n        \n            src/dish/dish.module.ts\n        \n\n\n\n\n\n        \n            \n                \n                    Providers\n                    \n                        \n                            CategoryService\n                        \n                    \n                \n                \n                    Controllers\n                    \n                        \n                            CategeoryController\n                        \n                    \n                \n            \n        \n\n\n    \n\n\n    \n        import { CategeoryController } from './controllers/category.controller';\nimport { Module } from '@nestjs/common';\nimport { MongooseModule } from '@nestjs/mongoose';\nimport { CategorySchema, Category } from './schema/category.schema';\nimport { CategoryService } from './services/category.service';\n\n@Module({\n  imports: [\n    MongooseModule.forFeature([\n      { name: Category.name, schema: CategorySchema },\n    ]),\n  ],\n  providers: [CategoryService],\n  controllers: [CategeoryController],\n})\nexport class DishModules {}\n\n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/app.controller.ts\n            \n            controller\n            AppController\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/app.service.ts\n            \n            injectable\n            AppService\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/dish/controllers/category.controller.ts\n            \n            controller\n            CategeoryController\n            \n                0 %\n                (0/4)\n            \n        \n        \n            \n                \n                src/dish/dtos/createCategory.dto.ts\n            \n            class\n            CreateCategoryDto\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/dish/schema/category.schema.ts\n            \n            class\n            Category\n            \n                0 %\n                (0/2)\n            \n        \n        \n            \n                \n                src/dish/schema/category.schema.ts\n            \n            variable\n            CategorySchema\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/dish/services/category.service.ts\n            \n            injectable\n            CategoryService\n            \n                20 %\n                (1/5)\n            \n        \n        \n            \n                \n                src/main.ts\n            \n            function\n            bootstrap\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            @nestjs/common : ^8.0.0\n        \n            @nestjs/config : ^2.1.0\n        \n            @nestjs/core : ^8.0.0\n        \n            @nestjs/mongoose : ^9.1.1\n        \n            @nestjs/platform-express : ^8.0.0\n        \n            @nestjs/swagger : ^5.2.1\n        \n            class-transformer : ^0.5.1\n        \n            class-validator : ^0.13.2\n        \n            joi : ^17.6.0\n        \n            mongoose : ^6.4.1\n        \n            reflect-metadata : ^0.1.13\n        \n            rimraf : ^3.0.2\n        \n            rxjs : ^7.2.0\n        \n            swagger-ui-express : ^4.4.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            bootstrap   (src/.../main.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/main.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        bootstrap\n                        \n                    \n                \n            \n            \n                \nbootstrap()\n                \n            \n\n\n\n\n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\n\n  \n\n\n  A progressive Node.js framework for building efficient and scalable server-side applications.\n    \n\n\n\n\n\n\n\n\n  \n    \n  \n\n  \n\nDescription\nNest framework TypeScript starter repository.\nInstallation\n$ npm installRunning the app\n# development\n$ npm run start\n\n# watch mode\n$ npm run start:dev\n\n# production mode\n$ npm run start:prodTest\n# unit tests\n$ npm run test\n\n# e2e tests\n$ npm run test:e2e\n\n# test coverage\n$ npm run test:covSupport\nNest is an MIT-licensed open source project. It can grow thanks to the sponsors and support by the amazing backers. If you'd like to join them, please read more here.\nStay in touch\n\nAuthor - Kamil Myśliwiec\nWebsite - https://nestjs.com\nTwitter - @nestframework\n\nLicense\nNest is MIT licensed.\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n            \n                \n                    \n                        AppModule\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DatabaseModule\n                    \n                    \n                                \n                                    No graph available.\n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n            \n                \n                    \n                        DishModules\n                    \n                    \n                                \n                                    \n                                        Your browser does not support SVG\n                                    \n                                \n                        \n                            Browse\n                        \n                    \n                \n            \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n  \n\n    \n        \n\n\n\n\n\ndependencies\n\ndependencies\n\ncluster_AppModule\n\n\n\ncluster_AppModule_imports\n\n\n\ncluster_AppModule_providers\n\n\n\ncluster_DishModules\n\n\n\ncluster_DishModules_providers\n\n\n\n\nDatabaseModule\n\nDatabaseModule\n\n\n\nAppModule\n\nAppModule\n\nAppModule -->\n\nDatabaseModule->AppModule\n\n\n\n\n\nAppService\n\nAppService\n\nAppModule -->\n\nAppService->AppModule\n\n\n\n\n\nCategoryService\n\nCategoryService\n\n\n\nDishModules\n\nDishModules\n\nDishModules -->\n\nCategoryService->DishModules\n\n\n\n\n\n\n    \n    \n    \n        Zoom in\n        Reset\n        Zoom out\n    \n\n  \n\n    \n        \n            \n                \n                    \n                    \n                        3 Modules\n                    \n                \n            \n        \n        \n            \n                \n                    \n                    2 Controllers\n                \n            \n        \n        \n            \n                \n                    \n                    2 Injectables\n                \n            \n        \n        \n            \n                \n                    \n                    2 Classes\n                \n            \n        \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 0.0.1\n        \n            Description : \n        \n            License : UNLICENSED\n        \n            Author : \n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CategoryDocument   (src/.../category.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/dish/schema/category.schema.ts\n    \n    \n        \n            \n                \n                    \n                    CategoryDocument\n                \n            \n            \n                \n                        \n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            CategorySchema   (src/.../category.schema.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/dish/schema/category.schema.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        CategorySchema\n                        \n                    \n                \n            \n                \n                    \n                        Default value : SchemaFactory.createForClass(Category)\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
